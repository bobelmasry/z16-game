# Test Case: Branch Instructions
# Tests: beq, bne, blt, bge, bltu, bgeu, bz, bnz (taken and not-taken cases)

.text
.org 0x000
    j main

.org 0x0020
main:
    li x1, 5
    li x2, 5
    li x3, 3
    li x4, 7
    li x5, 0
    li x0, 1

    # BEQ taken
    beq x1, x2, beq_taken
    la a0, error_msg
    ecall 3 
    ecall 10
beq_taken:
    li16 x7, 1001      # Should be executed
    mv a0, x7
    ecall 0x003      # Print x7 (should be 1001)

    # BNE not taken
    bne x1, x2, bne_taken
    li16 x7, 2002      # Should be executed
bne_taken:
    li16 x7, 2222      # Should be skipped


    # BLT taken
    blt x3, x4, blt_taken
    li16 x7, 3333      # Should be skipped
blt_taken:
    li16 x7, 3003      # Should be executed


    # BGE not taken
    bge x3, x4, bge_taken
    li16 x7, 4004      # Should be executed
bge_taken:
    li16 x7, 4444      # Should be skipped
    mv a0, x7
    ecall 0x003      # Print x7 (should be 4004)

    # BLTU taken (unsigned)
    li16 x1, 0x0001
    li16 x2, 0xFFFF
    bltu x1, x2, bltu_taken
    li16 x7, 5555      # Should be skipped
bltu_taken:
    li16 x7, 5005      # Should be executed


    # BGEU not taken (unsigned)
    bgeu x1, x2, bgeu_taken

bgeu_taken:

    # BZ taken (x5 == 0)
    bz x5, bz_taken
bz_taken:

    # BNZ not taken (x5 == 0)
    bnz x5, bnz_taken
bnz_taken:


    # BNZ taken (x0 != 0)
    bnz x0, bnz2_taken
bnz2_taken:


    # BZ not taken (x0 != 0)
    bz x0, bz2_taken
bz2_taken:


    # Exit
    ecall 10

.data
error_msg: .byte 'e','r','r'